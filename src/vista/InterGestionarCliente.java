/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import controlador.Ctrl_Cliente;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Modelo_Cliente;

/**
 *
 * @author Edward
 */
public class InterGestionarCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form InterGestionarCategoria
     */
    private int idCliente;
    String cilindrajeAux = "";
    String auxImagen = "";
    String cedulaCliente="";

    public InterGestionarCliente() {
        initComponents();
        this.setSize(new Dimension(940, 500));
        this.setTitle("GESTIONAR_CLIENTES");
        this.fondoEtiqueta();
        this.cargarTablaClientes();
              this.setClosable(false);
           this.setIconifiable(false);
           this.setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE); //no permite el movimiento del internal
           ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null); // desactiva la abrra de titulo
    }

    //Para poner el logo de suzuki a escala en el bar menu
    private void fondoEtiqueta() {
        ImageIcon logo = new ImageIcon("src/img/fondo3.jpg");
        Icon icon = new ImageIcon(logo.getImage().getScaledInstance(940, 500, WIDTH));
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tit = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        scrollCategorias = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(1366, 766));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tit.setBackground(new java.awt.Color(255, 255, 255));
        tit.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        tit.setForeground(new java.awt.Color(255, 255, 255));
        tit.setText("Administrar Clientes");
        getContentPane().add(tit, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 80, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 280, 130, -1));

        btnActualizar.setBackground(new java.awt.Color(0, 153, 153));
        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 230, -1, -1));

        jLabel7.setBackground(new java.awt.Color(102, 102, 102));
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 210, 150, 120));

        tablaClientes.setBackground(new java.awt.Color(204, 204, 204));
        tablaClientes.setForeground(new java.awt.Color(0, 0, 0));
        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollCategorias.setViewportView(tablaClientes);

        getContentPane().add(scrollCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 730, 270));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Correo:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 530, 70, -1));

        txtApellido.setBackground(new java.awt.Color(255, 255, 255));
        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtApellido.setForeground(new java.awt.Color(0, 0, 0));
        txtApellido.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtApellido.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 490, 170, 25));

        txtCedula.setBackground(new java.awt.Color(255, 255, 255));
        txtCedula.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCedula.setForeground(new java.awt.Color(0, 0, 0));
        txtCedula.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtCedula.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 490, 170, 25));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Cedula:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 490, 70, -1));

        txtCorreo.setBackground(new java.awt.Color(255, 255, 255));
        txtCorreo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCorreo.setForeground(new java.awt.Color(0, 0, 0));
        txtCorreo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtCorreo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCorreo.setEnabled(false);
        getContentPane().add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 530, 170, 25));

        txtNombre.setBackground(new java.awt.Color(255, 255, 255));
        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(0, 0, 0));
        txtNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, 170, 25));

        txtDireccion.setBackground(new java.awt.Color(255, 255, 255));
        txtDireccion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtDireccion.setForeground(new java.awt.Color(0, 0, 0));
        txtDireccion.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtDireccion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 530, 170, 25));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Apellido:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 500, 80, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Direccion:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 530, 80, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Telefono:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 540, 80, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Nombre:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 500, 80, -1));

        txtTelefono.setBackground(new java.awt.Color(255, 255, 255));
        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTelefono.setForeground(new java.awt.Color(0, 0, 0));
        txtTelefono.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtTelefono.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 530, 170, 25));

        jLabel2.setBackground(new java.awt.Color(102, 102, 102));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 860, 110));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FONDO4.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 740));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (txtNombre.getText().isEmpty() || txtApellido.getText().isEmpty() || txtCedula.getText().isEmpty() || txtTelefono.getText().isEmpty()
                || txtDireccion.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Rellene todos los campos");

        } else
        {
            Modelo_Cliente cliente = new Modelo_Cliente();
            Ctrl_Cliente ctrl_Cliente = new Ctrl_Cliente();
            if (txtCedula.getText().equals(cedulaCliente))
            {
             
                    cliente.setNombre(txtNombre.getText().trim());
                    cliente.setApellido(txtApellido.getText().trim());
                    cliente.setCedula(txtCedula.getText().trim());
                    cliente.setTelefono(txtTelefono.getText().trim());
                    cliente.setDireccion(txtDireccion.getText().trim());
                    cliente.setCorreo(txtCorreo.getText().trim());
                    if (ctrl_Cliente.actualizarCliente(cliente, idCliente))
                    {
                        JOptionPane.showMessageDialog(null, "Actualizacion Exitosa");
                        this.cargarTablaClientes();
                        this.limpiar();
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "Error al actualizar");
                    }
                } else
                {

                    if (!ctrl_Cliente.existeCedula(txtCedula.getText()))
                    {
                        cliente.setNombre(txtNombre.getText().trim());
                        cliente.setApellido(txtApellido.getText().trim());
                        cliente.setCedula(txtCedula.getText().trim());
                        cliente.setTelefono(txtTelefono.getText().trim());
                        cliente.setDireccion(txtDireccion.getText().trim());
                        cliente.setCorreo(txtCorreo.getText().trim());
                        if (ctrl_Cliente.actualizarCliente(cliente, idCliente))
                        {
                            JOptionPane.showMessageDialog(null, "Actualizacion Exitosa");
                            this.cargarTablaClientes();
                            this.limpiar();
                        } else
                        {
                            JOptionPane.showMessageDialog(null, "Error al actualizar");
                        }
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "La cédula ya está registrada");
                    }

                }
            
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       Ctrl_Cliente ctrl_Cliente= new Ctrl_Cliente();
       
       if(idCliente==0){
           JOptionPane.showMessageDialog(null, "Seleccione un cliente");
       }else{
           if(!ctrl_Cliente.eliminarCiente(idCliente)){
               JOptionPane.showMessageDialog(null, "El cliente ha sido eliminado");
               this.cargarTablaClientes();
               this.limpiar();
           }else{
               JOptionPane.showMessageDialog(null, "Error al eliminar cliente");
               this.limpiar();
           }
       }

    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JScrollPane scrollCategorias;
    public static javax.swing.JTable tablaClientes;
    private javax.swing.JLabel tit;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    //Metodo Limpiar 
    private void limpiar() {
        txtApellido.setText(null);
        txtDireccion.setText(null);
        txtNombre.setText(null);
        txtTelefono.setText(null);
        txtCedula.setText(null);
        txtCorreo.setText(null);

    }

    //Metodo para motrar todas los clientes registrados
    public void cargarTablaClientes() {
        Connection cx = conexion.ConectionDB.conectar();
        DefaultTableModel dfT = new DefaultTableModel();
        String sql = "select *from cliente";
        Statement st;

        try {
            st = cx.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarCliente.tablaClientes = new JTable(dfT);
            InterGestionarCliente.scrollCategorias.setViewportView(InterGestionarCliente.tablaClientes);

            dfT.addColumn("ID");
            dfT.addColumn("Nombre");
            dfT.addColumn("Apellido");
            dfT.addColumn("Dirección");
            dfT.addColumn("Telefono");
            dfT.addColumn("Cédula");
            dfT.addColumn("Correo");

            while (rs.next()) {

                Object fila[] = new Object[7];

                for (int i = 0; i < 7; i++) {
                    fila[i] = rs.getObject(i + 1);

                }
                dfT.addRow(fila);
            }
            cx.close();

        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla clientes: " + e);
        }

        tablaClientes.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = tablaClientes.rowAtPoint(e.getPoint());
                int columna_point = 0;
                int columna=5;
                if (fila_point > -1) {
                    idCliente = (int) dfT.getValueAt(fila_point, columna_point);
                    cedulaCliente=dfT.getValueAt(fila_point, columna).toString();
                    enviarDatosClienteSeleccionada(idCliente);
                }
            }

        });
    }

    //Para mostrar informacion del cliente
    private void enviarDatosClienteSeleccionada(int idCliente) {
        Connection cx = conexion.ConectionDB.conectar();
        try {
            PreparedStatement pst = cx.prepareStatement(
                    "select * from cliente where idCliente='" + idCliente + "';");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txtNombre.setText(rs.getString("nombre"));
                txtApellido.setText(rs.getString("apellido"));
                txtCedula.setText(rs.getString("cedula"));
                txtTelefono.setText(rs.getString("telefono"));
                txtDireccion.setText(rs.getString("direccion"));
                txtCorreo.setText(rs.getString("correo"));

            }
            cx.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar cliente " + e);
        }
    }

    //Metodo asignar Imagen Moto
  
}
